!function e(t,r,n){function o(s,a){if(!r[s]){if(!t[s]){var l="function"==typeof require&&require;if(!a&&l)return l(s,!0);if(i)return i(s,!0);var u=new Error("Cannot find module '"+s+"'");throw u.code="MODULE_NOT_FOUND",u}var c=r[s]={exports:{}};t[s][0].call(c.exports,function(e){var r=t[s][1][e];return o(r?r:e)},c,c.exports,e,t,r,n)}return r[s].exports}for(var i="function"==typeof require&&require,s=0;s<n.length;s++)o(n[s]);return o}({1:[function(e,t){t.exports={union:e("turf-union"),intersect:e("turf-intersect"),difference:e("turf-difference")}},{"turf-difference":12,"turf-intersect":13,"turf-union":14}],2:[function(e,t){t.exports={union:e("./lib/union"),intersect:e("./lib/intersect"),subtract:e("./lib/subtract"),utils:e("./lib/util")}},{"./lib/intersect":4,"./lib/subtract":6,"./lib/union":7,"./lib/util":8}],3:[function(e,t){function r(e,t){return e||t?e&&t?mode="intersect":!e&&t?mode="subtractB":e&&!t&&(mode="subtractA"):mode="union",mode}function n(e,t,r,n,o){var i=e.count(),s=t.count();if(0===e.count("intersect",!0))switch(o){case"union":return[[r],[n]];case"intersect":return[];case"subtractB":return"in"==t.first.type?[[r,n]]:e.count("type","in")==i?[]:[[r]];case"subtractA":return"in"==e.first.type?[[n,r]]:"in"==t.first.type?[]:[[n]]}if(i==e.count("degenerate",!0)||1==e.count("intersect",!0))switch(o){case"subtractA":return s==t.count("degenerate",!0)?[]:[[n]];case"subtractB":return s==t.count("degenerate",!0)?[]:[[r]];default:return[[r]]}}function o(e,t,r){for(var n=e.first,o=[],i=!1,s="next",a="prev";n=e.firstIntersect();){var l=[[n.x,n.y]];do{if(i?(s=r?"next":"prev",a=r?"prev":"next"):(s=t?"next":"prev",a=t?"prev":"next"),n.checked=!0,n.neighbor&&(n.neighbor.checked=!0),n.entry){do n=n[s],l.push([n.x,n.y]);while(!n.intersect)}else do n=n[a],l.push([n.x,n.y]);while(!n.intersect);n=n.neighbor,i=!i}while(!n.checked);if(y.pointsEqual(l[0],l[l.length-1])){if(l.length<4)continue}else l.push(l[0]);o.push({geom:l,is_hole:!1})}for(var u=[],c={},h=0;h<o.length;h++){c[h]||(c[h]=[]);for(var p=h+1;p<o.length;p++)f(o[p].geom[0],o[h].geom)&&(o[p].is_hole=!0,c[h].push(p))}for(var g in c)if(!o[g].is_hole){var l=[o[g].geom];c[g].forEach(function(e){l.push(o[e].geom)}),u.push(l)}return u}function i(e,t,r,n){var o=e.first;do{l(o,n);var i=t.first;if(!o.intersect)do{if(l(i,r),!i.intersect){var s=e.nextNonIntersect(o.next),u=t.nextNonIntersect(i.next),c=h(o,s,i,u);c&&(i=a(e,t,o,s,i,u,c))}i=i.next}while(i!==t.first);o=o.next}while(o!==e.first)}function s(e){var t=e.first;do t.degenerate&&(t.intersect=!0,t.neighbor.intersect=!0),t=t.next;while(t!=e.first)}function a(e,t,r,n,o,i,s){var a,l,u=0<s.alphaA&&s.alphaA<1,c=0<s.alphaB&&s.alphaB<1;return u&&c?(a=new g(s.x,s.y,s.alphaA,!0),l=new g(s.x,s.y,s.alphaB,!0),e.insert(a,r,n),t.insert(l,o,i)):(u?(a=new g(s.x,s.y,s.alphaA,!0,!0),e.insert(a,r,e.nextNonIntersect(r.next))):0==s.alphaA?(r.intersect=!0,r.degenerate=!0,r.alpha=s.alphaA,a=r):1==s.alphaA&&(n.intersect=!1,n.degenerate=!0,n.alpha=s.alphaA,a=n),c?(l=new g(s.x,s.y,s.alphaB,!0,!0),t.insert(l,o,t.nextNonIntersect(o.next))):0==s.alphaB?(o.intersect=!0,o.degenerate=!0,o.alpha=s.alphaB,l=o):1==s.alphaB&&(i.intersect=!1,i.degenerate=!0,i.alpha=s.alphaB,l=i,o.next!=t.first&&(o=o.next))),a&&l&&(a.neighbor=l,l.neighbor=a,a.type="on",l.type="on"),o}function l(e,t){e.type||(e.type=f([e.x,e.y],t)?"in":"out")}function u(e){var t=e.first,r=t;do{if(r.intersect&&r.neighbor)switch(c(r),c(r.neighbor),r.entryPair()){case"en/en":r.remove=!0,r.type="in",r.intersect=!1,r.neighbor.intersect=!1;break;case"ex/ex":r.remove=!0,r.type="out",r.intersect=!1,r.neighbor.intersect=!1}r=r.next}while(r!=t)}function c(e){var t=e.pairing();switch(t){case"in/out":case"on/out":case"in/on":e.entry=!1;break;case"out/in":case"on/in":case"out/on":e.entry=!0;break;case"out/out":case"in/in":case"on/on":var r=e.neighbor.pairing();"out/out"==r||"in/in"==r||"on/on"==r||"on/on"==t&&"on/out"==r?(e.remove=!0,e.neighbor.remove=!0,e.neighbor.intersect=!1,e.intersect=!1):(c(e.neighbor),e.entry=!e.neighbor.entry);break;default:console.error("UNKNOWN TYPE",e.pairing())}}function h(e,t,r,n){var o,i,s,a,l,u={x:null,y:null,onLine1:!1,onLine2:!1,alphaA:null,alphaB:null};return o=(n.y-r.y)*(t.x-e.x)-(n.x-r.x)*(t.y-e.y),0==o?e.equals(r)?(u.x=e.x,u.y=e.y,u.alphaA=0,u.alphaB=0,u):!1:(i=e.y-r.y,s=e.x-r.x,a=(n.x-r.x)*i-(n.y-r.y)*s,l=(t.x-e.x)*i-(t.y-e.y)*s,i=a/o,s=l/o,u.x=e.x+i*(t.x-e.x),u.y=e.y+i*(t.y-e.y),u.alphaA=i,u.alphaB=s,u.alphaA>.99999999999999&&(u.alphaA=1),u.alphaB>.99999999999999&&(u.alphaB=1),u.alphaA<1e-14&&(u.alphaA=0),u.alphaB<1e-14&&(u.alphaB=0),i>=0&&1>=i&&(u.onLine1=!0),s>=0&&1>=s&&(u.onLine2=!0),u.onLine1&&u.onLine2?u:!1)}var p=e("./ring"),g=e("./vertex"),f=e("point-in-polygon"),y=e("./util");t.exports=function(e,t,a,l){a=!!a,l=!!l;{var c=r(a,l),h=p.fromArray(e),g=p.fromArray(t);i(h,g,e,t)}s(h);var f;return(f=n(h,g,e,t,c))?f:(u(h),o(h,a,l))}},{"./ring":5,"./util":8,"./vertex":9,"point-in-polygon":10}],4:[function(e,t){var r=e("./greiner-hormann"),n=e("./union"),o=e("./util"),i=e("./subtract");t.exports=function(e,t){for(var e=o.clone(e),t=o.clone(t),s=o.outerHulls(e),a=o.outerHulls(t),l=o.holes(e).concat(o.holes(t)),u=[],c=0;c<s.length;c++)for(var h=0;h<a.length;h++){var p=r(s[c],a[h],!0,!0);Array.isArray(p)&&(u=u.concat(p))}if(l.length>0){var g=n(o.wrapToPolygons(l));return i(u,o.wrapToPolygons(o.outerHulls(g)))}return u}},{"./greiner-hormann":3,"./subtract":6,"./union":7,"./util":8}],5:[function(e,t){function r(){this.first=null}var n=e("./vertex"),o=e("turf-is-clockwise");r.prototype.count=function(e,t){for(var r=this.first,n=0;;)if(e?r[e]===t&&n++:n++,r=r.next,r==this.first)break;return n},r.fromArray=function(e){var t=new r;o(e)||(e=e.reverse());for(var i=0;i<e.length-1;i++){var s=e[i];t.push(new n(s[0],s[1]))}return t},r.prototype.push=function(e){this.first?(next=this.first,prev=next.prev,next.prev=e,e.next=next,e.prev=prev,prev.next=e):(this.first=e,this.first.prev=e,this.first.next=e)},r.prototype.insert=function(e,t,r){for(var n=t.next;n!=r&&n.alpha<e.alpha;)n=n.next;e.next=n,prev=n.prev,e.prev=prev,prev.next=e,n.prev=e},r.prototype.nextNonIntersect=function(e){for(var t=e;t.intersect&&t!=this.first;)t=t.next;return t},r.prototype.firstIntersect=function(){for(var e=this.first;;){if(e.intersect&&!e.checked)return e;if(e=e.next,e==this.first)break}return!1},r.prototype.toArray=function(){var e=this.first,t=[];do t.push([e.x,e.y]),e=e.next;while(e!=this.first);return t},t.exports=r},{"./vertex":9,"turf-is-clockwise":11}],6:[function(e,t){function r(e,t){for(var r=[],n=0;n<e.length;n++)for(var o=0;o<t.length;o++){var s=i(e[n],t[o],!0,!0);Array.isArray(s)&&(r=r.concat(s))}return r}function n(e,t,s){s=!!s,e=o.clone(e),t=o.clone(t);var a=o.outerHulls(e),l=o.outerHulls(t),u=o.holes(t);if(u.length>0)var u=r(a,u);e=o.isPolygon(e)?[e]:o.wrapToPolygons(e);for(var c=0;c<l.length;c++){for(var h=e.length,p=0;p<e.length;p++){var g=i(e[p][0],l[c],!1,!0);if(0!=g.length){e[p][0]=g[0][0];for(var f=1;f<g[0].length;f++)e[p].push(g[0][f]);for(var f=1;f<g.length;f++)e.push(g[f])}else e.splice(p,1),p--}h!=e.length&&(l.splice(c,1),c--)}u.length>0&&(e=e.concat(o.wrapToPolygons(u)));var y=o.holes(e);return y.length>0&&!s?n(o.wrapToPolygons(o.outerHulls(e)),o.wrapToPolygons(y),!0):e}var o=e("./util"),i=e("./greiner-hormann");t.exports=n},{"./greiner-hormann":3,"./util":8}],7:[function(e,t){function r(e,t){for(var r=0;r<e.length;r++)for(var n=r+1;n<e.length;n++)if(r!=n){var i=o(e[r],e[n],!1,!1);1==i.length&&(e[r]=i[0][0],e.splice(n,1),n=r,i[0].length>1&&i[0].forEach(function(e,r){0!=r&&t.push(e)}))}return e}function n(e,t,r){var n=i.outerHulls(e[t]),o=i.holes(e[r]);if(o.length>0){var a=s(i.wrapToPolygons(o),n);e[r].splice(1),e[r]=e[r].concat(i.outerHulls(a))}}var o=e("./greiner-hormann"),i=e("./util"),s=e("./subtract");t.exports=function(e,t){"undefined"!=typeof t&&null!=t&&(i.isMultiPolygon(e)||(e=[e]),i.isMultiPolygon(t)||(t=[t]),e=e.concat(t)),e=i.clone(e);for(var o=0;o<e.length;o++)for(var a=o+1;a<e.length;a++)n(e,a,o),n(e,o,a);var l=i.outerHulls(e),u=i.holes(e);return l=i.wrapToPolygons(r(l,u)),u.length>0?(u=r(u),u=i.wrapToPolygons(u),s(l,u)):l}},{"./greiner-hormann":3,"./subtract":6,"./util":8}],8:[function(e,t,r){Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),r.clone=function n(e){for(var t=e.slice(),r=0;r<t.length;r++)Array.isArray(t[r])&&(t[r]=n(t[r]));return t},r.wrapToPolygons=function(e){for(var t=[],n=0;n<e.length;n++)r.isRing(e[n])?t.push([e[n]]):r.isMultiPolygon(e[n])?t.concat(e[n]):r.isPolygon(e[n])&&t.push(e[n]);return t},r.unwrap=function(e){for(var t=[],r=0;r<e.length;r++)for(var n=0;n<e[r].length;n++)t.push(e[r][n])},r.depth=function(e){function t(e,r){return Array.isArray(e)?t(e[0],r+1):r}return t(e,0)},r.isMultiPolygon=function(e){return 4==r.depth(e)?!0:!1},r.isPolygon=function(e){return 3==r.depth(e)?!0:!1},r.isRing=function(e){return 2==r.depth(e)?!0:!1},r.outerHulls=function(e){var t=[];if(r.isPolygon(e))return[e[0]];for(var n=0;n<e.length;n++)if(r.isMultiPolygon(e[n]))for(var o=0;o<e[n].length;o++)t.push(e[n][o][0]);else r.isPolygon(e[n])?t.push(e[n][0]):r.isRing(e[n])&&t.push(e[n]);return t},r.holes=function(e){var t=[];if(r.isPolygon(e))return e.slice(1);for(var n=0;n<e.length;n++)if(r.isMultiPolygon(e[n]))for(var o=0;o<e[n].length;o++)for(var i=1;i<e[n][o].length;i++)t.push(e[n][o][i]);else if(r.isPolygon(e[n]))for(var o=1;o<e[n].length;o++)t.push(e[n][o]);return t},r.pointsEqual=function(e,t){return e[0]==t[0]&&e[1]==t[1]?!0:!1}},{}],9:[function(e,t){function r(e,t,r,n,o){this.x=e,this.y=t,this.alpha=r||0,this.intersect=n||!1,this.entry=!0,this.checked=!1,this.degenerate=o||!1,this.neighbor=null,this.next=null,this.prev=null,this.type=null,this.remove=!1}r.prototype.pairing=function(){return this.prev.type+"/"+this.next.type},r.prototype.entryPair=function(){var e=this.entry?"en":"ex",t=this.neighbor.entry?"en":"ex";return e+"/"+t},r.prototype.equals=function(e){return this.x==e.x&&this.y==e.y?!0:!1},r.prototype.log=function(){console.log("INTERSECT: "+(this.intersect?"Yes":"No ")+" ENTRY: "+(this.entry?"Yes":"No ")+" DEGEN: "+(this.degenerate?"Yes":"No ")+" TYPE: "+String(this.prev.type+" ").slice(0,3)+" / "+String(this.type+" ").slice(0,3)+" / "+String(this.next.type+" ").slice(0,3)+" ALPHA: "+this.alpha.toPrecision(3)+" REMOVE: "+(this.remove?"Yes":"No")+" "+this.x+", "+this.y)},t.exports=r},{}],10:[function(e,t){t.exports=function(e,t){for(var r=e[0],n=e[1],o=!1,i=0,s=t.length-1;i<t.length;s=i++){var a=t[i][0],l=t[i][1],u=t[s][0],c=t[s][1],h=l>n!=c>n&&(u-a)*(n-l)/(c-l)+a>r;h&&(o=!o)}return o}},{}],11:[function(e,t){t.exports=function(e){for(var t,r,n=0,o=1,i=e.length;i>o;)t=r||e[0],r=e[o],n+=(r[0]-t[0])*(r[1]+t[1]),o++;return n>0}},{}],12:[function(e,t){var r=e("gh-clipping-algorithm");t.exports=function(e,t){var n=e.coordinates?e.coordinates:e.geometry.coordinates,o=t.coordinates?t.coordinates:t.geometry.coordinates,i=r.subtract(n,o),s={type:"Feature",properties:{},geometry:{}};return i&&0!=i.length?(r.utils.isMultiPolygon(i)?i.length>1?(s.geometry.type="MultiPolygon",s.geometry.coordinates=i):(s.geometry.type="Polygon",s.geometry.coordinates=i[0]):r.utils.isPolygon(i)&&(s.geometry.type="Polygon",s.geometry.coordinates=i),e.properties&&(s.properties=e.properties),s):void 0}},{"gh-clipping-algorithm":2}],13:[function(e,t){var r=e("gh-clipping-algorithm");t.exports=function(e,t){var n=e.coordinates?e.coordinates:e.geometry.coordinates,o=t.coordinates?t.coordinates:t.geometry.coordinates,i=r.intersect(n,o),s={type:"Feature",properties:{},geometry:{}};return i&&0!=i.length?(r.utils.isMultiPolygon(i)?i.length>1?(s.geometry.type="MultiPolygon",s.geometry.coordinates=i):(s.geometry.type="Polygon",s.geometry.coordinates=i[0]):r.utils.isPolygon(i)&&(s.geometry.type="Polygon",s.geometry.coordinates=i),s):void 0}},{"gh-clipping-algorithm":2}],14:[function(e,t){var r=e("gh-clipping-algorithm");t.exports=function(e,t){var n=e.coordinates?e.coordinates:e.geometry.coordinates,o=t.coordinates?t.coordinates:t.geometry.coordinates,i=r.union(n,o),s={type:"Feature",properties:{},geometry:{}};return i&&0!=i.length?(r.utils.isMultiPolygon(i)?i.length>1?(s.geometry.type="MultiPolygon",s.geometry.coordinates=i):(s.geometry.type="Polygon",s.geometry.coordinates=i[0]):r.utils.isPolygon(i)&&(s.geometry.type="Polygon",s.geometry.coordinates=i),e.properties&&(s.properties=e.properties),s):void 0}},{"gh-clipping-algorithm":2}]},{},[1]);